   Internet Assigned Numbers Authority

                                              Hypertext Transfer Protocol (HTTP) Digest Algorithm Values

   Created
           2002-01-03

   Last Updated
           2022-02-21

   Available Formats
           [IMG]
           XML [IMG]
           HTML [IMG]
           Plain text

   Registries included below

     * HTTP Digest Algorithm Values
     * Hash Algorithms for HTTP Digest Authentication

HTTP Digest Algorithm Values

   Registration Procedure(s)

 RFC Required or Specification Required

   Expert(s)

 James Manger

   Reference
           [RFC3230]

   Note

 This registry lists the algorithms that can be used when creating digests
 based on HTTP messages as specified in [RFC3230].


   Available Formats
           [IMG]
           CSV

    Digest                                 Description                                                          Reference
   Algorithm
             The ADLER32 algorithm is a checksum specified in RFC1950 "ZLIB
             Compressed Data Format". The 32-bit output is encoded in hexadecimal
   ADLER32   (using between 1 and 8 ASCII characters from 0-9, A-F, and a-f; leading  [RFC1950][RFC3309][Paul_Millar]
             0's are allowed). For example, ADLER32=03da0195 and ADLER32=3DA0195 are
             both valid checksums for the 4-byte message "Wiki".
             The CRC32c algorithm is a 32-bit cyclic redundancy check. It achieves a
             better hamming distance (for better error-detection performance) than
             many other 32-bit CRC functions. Other places it is used include iSCSI
   CRC32c    and SCTP. The 32-bit output is encoded in hexadecimal (using between 1   [RFC-ietf-tsvwg-rfc4960-bis-19, Appendix A]
             and 8 ASCII characters from 0-9, A-F, and a-f; leading 0's are allowed).
             For example, CRC32c=0a72a4df and crc32c=A72A4DF are both valid checksums
             for the 3-byte message "dog".
   MD5       The MD5 algorithm, as specified in [RFC1321]. The output of this         [RFC1321][RFC4648][RFC5843]
             algorithm is encoded using the base64 encoding [RFC4648].
             The SHA-1 algorithm [http://csrc.nist.gov/publications/PubsFIPS.html]    [http://csrc.nist.gov/publications/PubsFIPS.html][National
             [National Institute of Standards and Technology. Secure Hash Standard    Institute of Standards and Technology. Secure Hash Standard
   SHA       (SHS). FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION 180-3, U.S.  (SHS). FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION
             Department of Commerce, October 2008.]. The output of this algorithm is  180-3, U.S. Department of Commerce, October
             encoded using the base64 encoding [RFC4648].                             2008.][RFC4648][RFC5843]
             The SHA-256 algorithm                                                    [http://csrc.nist.gov/publications/PubsFIPS.html][National
             [http://csrc.nist.gov/publications/PubsFIPS.html][National Institute of  Institute of Standards and Technology. Secure Hash Standard
   SHA-256   Standards and Technology. Secure Hash Standard (SHS). FEDERAL            (SHS). FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION
             INFORMATION PROCESSING STANDARDS PUBLICATION 180-3, U.S. Department of   180-3, U.S. Department of Commerce, October
             Commerce, October 2008.]. The output of this algorithm is encoded using  2008.][RFC4648][RFC5843]
             the base64 encoding [RFC4648].
             The SHA-512 algorithm                                                    [http://csrc.nist.gov/publications/PubsFIPS.html][National
             [http://csrc.nist.gov/publications/PubsFIPS.html][National Institute of  Institute of Standards and Technology. Secure Hash Standard
   SHA-512   Standards and Technology. Secure Hash Standard (SHS). FEDERAL            (SHS). FEDERAL INFORMATION PROCESSING STANDARDS PUBLICATION
             INFORMATION PROCESSING STANDARDS PUBLICATION 180-3, U.S. Department of   180-3, U.S. Department of Commerce, October
             Commerce, October 2008.]. The output of this algorithm is encoded using  2008.][RFC4648][RFC5843]
             the base64 encoding [RFC4648].
             The algorithm computed by the UNIX ``sum'' command, as defined by the
             Single UNIX Specification, Version 2 [The Open Group. The Single UNIX    [The Open Group. The Single UNIX Specification, Version 2 - 6
   UNIXsum   Specification, Version 2 - 6 Vol Set for UNIX 98. Document number T912,  Vol Set for UNIX 98. Document number T912, The Open Group,
             The Open Group, February 1997.]. The output of this algorithm is an      February 1997.]
             ASCII decimal-digit string representing the 16-bit checksum, which is
             the first word of the output of the UNIX ``sum'' command.
             The algorithm computed by the UNIX ``cksum'' command, as defined by the
             Single UNIX Specification, Version 2 [The Open Group. The Single UNIX    [The Open Group. The Single UNIX Specification, Version 2 - 6
   UNIXcksum Specification, Version 2 - 6 Vol Set for UNIX 98. Document number T912,  Vol Set for UNIX 98. Document number T912, The Open Group,
             The Open Group, February 1997.]. The output of this algorithm is an      February 1997.]
             ASCII digit string representing the 32-bit CRC, which is the first word
             of the output of the UNIX ``cksum'' command.

Hash Algorithms for HTTP Digest Authentication

   Registration Procedure(s)

 Specification Required

   Expert(s)

 Unassigned

   Reference
           [RFC7616]

   Available Formats
           [IMG]
           CSV

   Hash Algorithm Digest Size Reference
   MD5            128         [RFC7616]
   SHA-512-256    256         [RFC7616]
   SHA-256        256         [RFC7616]

                                                                 Contact Information

        ID          Name            Contact URI         Last Updated
   [Paul_Millar] Paul Millar mailto:paul.millar&desy.de 2012-11-06

   Licensing Terms
