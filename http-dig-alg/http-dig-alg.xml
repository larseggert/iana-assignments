<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="http-dig-alg.xsl"?>
<?xml-model href="http-dig-alg.rng" schematypens="http://relaxng.org/ns/structure/1.0" ?>
<registry xmlns="http://www.iana.org/assignments" id="http-dig-alg">
  <title>Hypertext Transfer Protocol (HTTP) Digest Algorithm Values</title>
  <created>2002-01-03</created>
  <updated>2022-06-07</updated>
  
  <registry id="http-dig-alg-1">
    <title>HTTP Digest Algorithm Values</title>
    <xref type="rfc" data="rfc3230"/>
    <registration_rule>RFC Required or Specification Required</registration_rule>
    <expert>James Manger</expert>
    <note>This registry lists the algorithms that can be used when creating digests 
based on HTTP messages as specified in <xref type="rfc" data="rfc3230"/>.
    </note>
    <record date="2012-11-06">
      <name>ADLER32</name>
      <description>The ADLER32 algorithm is a checksum specified in RFC1950 "ZLIB
      Compressed Data Format". The 32-bit output is encoded in hexadecimal
      (using between 1 and 8 ASCII characters from 0-9, A-F, and a-f;
      leading 0's are allowed). For example, ADLER32=03da0195 and ADLER32=3DA0195
      are both valid checksums for the 4-byte message "Wiki".</description>
      <xref type="rfc" data="rfc1950"/>
      <xref type="rfc" data="rfc3309"/>
      <xref type="person" data="Paul_Millar"/>
    </record>
    <record date="2015-06-15">
      <name>CRC32c</name>
      <description>The CRC32c algorithm is a 32-bit cyclic redundancy check. It 
        achieves a better hamming distance (for better error-detection performance) 
        than many other 32-bit CRC functions. Other places it is used include iSCSI 
        and SCTP. The 32-bit output is encoded in hexadecimal (using between 1 and 
        8 ASCII characters from 0-9, A-F, and a-f; leading 0's are allowed). For 
        example, CRC32c=0a72a4df and crc32c=A72A4DF are both valid checksums for 
        the 3-byte message "dog".</description>
        <xref type="rfc" data="rfc9260">RFC9260, Appendix A</xref>
    </record>
    <record>
      <name>MD5</name>
      <description>The MD5 algorithm, as specified in <xref type="rfc" data="rfc1321"/>.         
      The output of this algorithm is encoded using
      the base64 encoding <xref type="rfc" data="rfc4648"/>.</description>
      <xref type="rfc" data="rfc1321"/>
      <xref type="rfc" data="rfc4648"/>
      <xref type="rfc" data="rfc5843"/>
    </record>
    <record>
      <name>SHA</name>
      <description>The SHA-1 algorithm 
      <xref type="uri" data="http://csrc.nist.gov/publications/PubsFIPS.html"/>
      <xref type="text">National Institute of Standards and Technology.
      Secure Hash Standard (SHS).  FEDERAL INFORMATION PROCESSING STANDARDS 
      PUBLICATION 180-3, U.S. Department of Commerce, October 2008.</xref>.  
      The output of this algorithm is encoded using the base64 encoding 
      <xref type="rfc" data="rfc4648"/>.</description>
      <xref type="uri" data="http://csrc.nist.gov/publications/PubsFIPS.html"/>
      <xref type="text">National Institute of Standards and Technology.
      Secure Hash Standard (SHS).  FEDERAL INFORMATION PROCESSING STANDARDS 
      PUBLICATION 180-3, U.S. Department of Commerce, October 2008.</xref>
      <xref type="rfc" data="rfc4648"/>
      <xref type="rfc" data="rfc5843"/>
    </record>
    <record>
      <name>SHA-256</name>
      <description>The SHA-256 algorithm <xref type="uri" data="http://csrc.nist.gov/publications/PubsFIPS.html"/><xref type="text">National Institute of Standards and Technology.
      Secure Hash Standard (SHS).  FEDERAL INFORMATION PROCESSING
      STANDARDS PUBLICATION 180-3, U.S. Department of
      Commerce, October 2008.</xref>.  The output           
      of this algorithm is encoded using the
      base64 encoding <xref type="rfc" data="rfc4648"/>.</description>
      <xref type="uri" data="http://csrc.nist.gov/publications/PubsFIPS.html"/>
      <xref type="text">National Institute of Standards and Technology.
      Secure Hash Standard (SHS).  FEDERAL INFORMATION PROCESSING
      STANDARDS PUBLICATION 180-3, U.S. Department of
      Commerce, October 2008.</xref>
      <xref type="rfc" data="rfc4648"/>
      <xref type="rfc" data="rfc5843"/>
    </record>
    <record>
      <name>SHA-512</name>
      <description>The SHA-512 algorithm <xref type="uri" data="http://csrc.nist.gov/publications/PubsFIPS.html"/><xref type="text">National Institute of Standards and Technology.
      Secure Hash Standard (SHS).  FEDERAL INFORMATION PROCESSING
      STANDARDS PUBLICATION 180-3, U.S. Department of
      Commerce, October 2008.</xref>.  The output           
      of this algorithm is encoded using the
      base64 encoding <xref type="rfc" data="rfc4648"/>.</description>
      <xref type="uri" data="http://csrc.nist.gov/publications/PubsFIPS.html"/>
      <xref type="text">National Institute of Standards and Technology.
      Secure Hash Standard (SHS).  FEDERAL INFORMATION PROCESSING
      STANDARDS PUBLICATION 180-3, U.S. Department of
      Commerce, October 2008.</xref>
      <xref type="rfc" data="rfc4648"/>
      <xref type="rfc" data="rfc5843"/>
    </record>    
    <record>
      <name>UNIXsum</name>
      <description>The algorithm computed by the UNIX ``sum''            
      command, as defined by the Single UNIX
      Specification, Version 2 <xref type="text">The Open Group.  The Single UNIX Specification,
      Version 2 - 6 Vol Set for UNIX 98.  Document number T912,
      The Open Group, February 1997.</xref>.  The output
      of this algorithm is an ASCII decimal-digit
      string representing the 16-bit checksum,
      which is the first word of the output of the
      UNIX ``sum'' command.</description>
      <xref type="text">The Open Group.  The Single UNIX Specification,
      Version 2 - 6 Vol Set for UNIX 98.  Document number T912,
      The Open Group, February 1997.</xref>
    </record>
    <record>
      <name>UNIXcksum</name>
      <description>The algorithm computed by the UNIX ``cksum''          
      command, as defined by the Single UNIX
      Specification, Version 2 <xref type="text">The Open Group.  The Single UNIX Specification,
      Version 2 - 6 Vol Set for UNIX 98.  Document number T912,
      The Open Group, February 1997.</xref>.  The output
      of this algorithm is an ASCII digit string
      representing the 32-bit CRC, which is the
      first word of the output of the UNIX ``cksum''
      command.</description>
      <xref type="text">The Open Group.  The Single UNIX Specification,
      Version 2 - 6 Vol Set for UNIX 98.  Document number T912,
      The Open Group, February 1997.</xref>
    </record>
  </registry>

  <registry id="hash-alg">
    <title>Hash Algorithms for HTTP Digest Authentication</title>
    <xref type="rfc" data="rfc7616"/>
    <registration_rule>Specification Required</registration_rule>
    <expert>Unassigned</expert>
    <record date="2015-04-30">
      <value>MD5</value>
      <description>128</description>
      <xref type="rfc" data="rfc7616"/>
    </record>
    <record date="2015-04-30">
      <value>SHA-512-256</value>
      <description>256</description>
      <xref type="rfc" data="rfc7616"/>
    </record>
    <record date="2015-04-30">
      <value>SHA-256</value>
      <description>256</description>
      <xref type="rfc" data="rfc7616"/>
    </record>
  </registry>

  <people>
    <person id="Paul_Millar">
      <name>Paul Millar</name>
      <uri>mailto:paul.millar&amp;desy.de</uri>
      <updated>2012-11-06</updated>
    </person>    
  </people>
</registry>
