(registered 2023-05-22, last updated 2024-02-08)

Media type name: application

Media subtype name: vnd.ipfs.ipns-record

Required parameters: N/A

Optional parameters: N/A

Encoding considerations: binary

Security considerations: The media type inherits the security 
   considerations from application/octet-stream, contains no 
   executable code, offers no data confidentiality, but provides 
   integrity protection through a signature digest:
   <https://specs.ipfs.tech/ipns/ipns-record/#record-verification>
   In the IPFS/IPNS contexts, it is mandatory to verify the integrity
   based on the expected signature digest before acting on any 
   content-addressed data linked from the record.

   When used in IPFS/IPNS context, it is strongly recommended 
   verifying record integrity based on expected signature digest 
   <https://specs.ipfs.tech/ipns/ipns-record/#record-verification>.

Interoperability considerations: N/A

Published specification:

   <https://specs.ipfs.tech/ipns/ipns-record/#record-serialization-format>

Applications which use this media: IPFS <https://ipfs.tech> uses 
   signed IPNS records as means of introducing 
   cryptographically-verifiable mutable pointers to immutable data 
   <https://specs.ipfs.tech/ipns/ipns-record/>.

   IPNS allows addressing dynamic content in a decentralized network 
   with changing location and version. Signed IPNS records in IPFS 
   enable secure, tamper-proof content-addressable applications and 
   services with high resilience against censorship and data loss.

Fragment identifier considerations: N/A

Restrictions on usage: N/A

Additional information:

   1. Deprecated alias names for this type: N/A
   2. Magic number(s): N/A
   3. File extension(s): ipns-record
   4. Macintosh file type code: N/A
   5. Object Identifiers: N/A

Person to contact for further information:

   1. Name: Marcin Rataj
   2. Email: lidel&ipshipyard.com

Intended usage: COMMON

   IPNS records can be exchanged using a variety of transport 
   mechanisms, including P2P, HTTP, or even sneakernet.

Author/Change controller:

   IPFS Project
   <standards&ipfs.tech>
